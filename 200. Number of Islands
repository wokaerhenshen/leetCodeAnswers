Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

Example 1:

Input:
11110
11010
11000
00000

Output: 1

Example 2:

Input:
11000
11000
00100
00011

Output: 3


best solution:

var numIslands = function(grid) {
    let count = 0;
    for (let r = 0; r < grid.length; r++) {
        for (let c = 0; c < grid[r].length; c++) { //check所有的点
            if (grid[r][c] === '1') { //如果为1表示还没被玷污过，可以count++
                dfs(grid, r, c);
                count += 1;
            }
        }
    }
    return count;
};

const dfs = (grid, r, c) => {
    if (r < 0 || r >= grid.length || c < 0 || c >= grid[r].length || grid[r][c] !== '1') { //如果越界了则不行
        return;
    }

    grid[r][c] = '#'; //将这个点标记为已check过的岛 【玷污】
    dfs(grid, r+1, c); //然后check一下周围的point看一看能不能 【玷污】
    dfs(grid, r-1, c);
    dfs(grid, r, c+1);
    dfs(grid, r, c-1);
};
